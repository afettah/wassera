'use client';

import { useState } from 'react';
import { useForm } from 'react-hook-form';
import { Button } from '@/components/ui/button';
import { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';

import CustomButton from '../components/button';
import { useScopedI18n } from '@/locales/client';
import { PhoneInput } from '@/components/ui/PhoneInput';

export default function RegistrationForm() {
  const [open, setOpen] = useState(false);
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm();
  const registrationT = useScopedI18n('home.hero.registration');

  const onSubmit = (data: any) => {
    console.log('Form submitted:', data);
    setOpen(false);
  };

  return (
    <Dialog open={open} onOpenChange={setOpen}>
      <DialogTrigger asChild>
        <CustomButton type="primary" variant="default" className="px-4 py-2 text-sm lg:px-6 lg:py-3 lg:text-lg">
          {registrationT('button')}
        </CustomButton>
      </DialogTrigger>
      <DialogContent className="sm:max-w-[375px] lg:max-w-[600px] lg:h-auto p-6 space-y-6">
        <DialogHeader>
          <DialogTitle className="text-2xl font-bold">{registrationT('modalTitle')}</DialogTitle>
        </DialogHeader>

        <DialogDescription className="text-lg space-y-4">
          <p>{registrationT('message')}</p>
          {/* Colored background section for info */}
          <div className="bg-blue-100 p-4 rounded-md text-blue-800">{registrationT('info')}</div>
        </DialogDescription>

        {/* Form Inputs */}
        <form onSubmit={handleSubmit(onSubmit)} className="space-y-4">
          <div className="grid gap-4">
            <div className="grid grid-cols-1 items-center gap-4">
              <Label htmlFor="firstName">{registrationT('firstName')}</Label>
              <Input id="firstName" {...register('firstName', { required: true })} className="w-full" />
              {errors.firstName && <span className="text-red-500">First name is required</span>}
            </div>

            <div className="grid grid-cols-1 items-center gap-4">
              <Label htmlFor="lastName">{registrationT('lastName')}</Label>
              <Input id="lastName" {...register('lastName', { required: true })} className="w-full" />
              {errors.lastName && <span className="text-red-500">Last name is required</span>}
            </div>

            <div className="grid grid-cols-1 items-center gap-4">
              <Label htmlFor="email">{registrationT('email')}</Label>
              <Input id="email" type="email" {...register('email', { required: true, pattern: /^\S+@\S+$/i })} className="w-full" />
              {errors.email && <span className="text-red-500">Valid email is required</span>}
            </div>

            <div className="grid grid-cols-1 items-center gap-4">
              <Label htmlFor="phone">{registrationT('phone')}</Label>
            </div>

            <div className="grid grid-cols-1 items-center gap-4">
              <Label htmlFor="serviceType">{registrationT('serviceType')}</Label>
              <Select required>
                <SelectTrigger className="w-full">
                  <SelectValue placeholder={registrationT('selectService')} />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="mortgageSplit">{registrationT('service.mortgageSplit')}</SelectItem>
                  <SelectItem value="investments">{registrationT('service.investments')}</SelectItem>
                  <SelectItem value="assetBackedLoan">{registrationT('service.assetBackedLoan')}</SelectItem>
                  <SelectItem value="savings">{registrationT('service.savings')}</SelectItem>
                </SelectContent>
              </Select>
            </div>
          </div>
          <DialogFooter>
            <Button type="submit">{registrationT('submit')}</Button>
          </DialogFooter>
        </form>
      </DialogContent>
    </Dialog>
  );
}
